from aiogram import Router, F
from aiogram.types import CallbackQuery, FSInputFile
from typing import Coroutine

# * –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä—É—á–∫–∏ –ø–æ–¥ –±–¥
from utils import database_utils
# * –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ç–∫—É
from keyboards.subscribtions import trial, light, standard, premium

# * –æ–±—ä—è–≤–ª—è–µ–º —Ä–æ—É—Ç–µ—Ä
router = Router()


@router.callback_query(F.data == 'subscribtion_trial')
async def subscribtion_trial(callback: CallbackQuery) -> Coroutine:
    """–æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–∞ –ø–æ–¥ —Ä–∞–∑–¥–µ–ª –ø–æ–¥–ø–∏—Å–∫–∏ trial

    Args:
        callback (CallbackQuery): –∫–æ–ª–±—ç–∫ —Å —Å–æ–æ–±—â–µ–Ω–∏—è

    Returns:
        Coroutine: –Ω–∞ –≤—ã—Ö–æ–¥–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ—Ä—É—Ç–∏–Ω
    """
    markup_inline = trial.get()
    photo = FSInputFile('src/trial.jpg')
    days = database_utils.Get.get_subscribtion_days_by_title(title='TRIAL')
    await callback.message.delete()
    await callback.message.answer_photo(photo=photo, 
                                        caption=f'–≠—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ üìôTRIAL, –ø–µ—Ä–∏–æ–¥ –µ–µ –¥–µ–π—Å—Ç–≤–∏—è {days} –¥–Ω–µ–π ' \
                                        '(–º–æ–∂–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)', 
                                        reply_markup=markup_inline)
    

@router.callback_query(F.data == 'subscribtion_light')
async def subscribtion_light(callback: CallbackQuery) -> Coroutine:
    """–æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–∞ –ø–æ–¥ —Ä–∞–∑–¥–µ–ª –ø–æ–¥–ø–∏—Å–∫–∏ light

    Args:
        callback (CallbackQuery): –∫–æ–ª–±—ç–∫ —Å —Å–æ–æ–±—â–µ–Ω–∏—è

    Returns:
        Coroutine: –Ω–∞ –≤—ã—Ö–æ–¥–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ—Ä—É—Ç–∏–Ω
    """
    markup_inline = light.get()
    photo = FSInputFile('src/light.jpg')
    days = database_utils.Get.get_subscribtion_days_by_title(title='LIGHT')
    await callback.message.delete()
    await callback.message.answer_photo(photo=photo, 
                                        caption=f'–≠—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ üìóLIGHT, –ø–µ—Ä–∏–æ–¥ –µ–µ –¥–µ–π—Å—Ç–≤–∏—è {days} –¥–Ω–µ–π ', 
                                        reply_markup=markup_inline)
    

@router.callback_query(F.data == 'subscribtion_standard')
async def subscribtion_standard(callback: CallbackQuery) -> Coroutine:
    """–æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–∞ –ø–æ–¥ —Ä–∞–∑–¥–µ–ª –ø–æ–¥–ø–∏—Å–∫–∏ standard

    Args:
        callback (CallbackQuery): –∫–æ–ª–±—ç–∫ —Å —Å–æ–æ–±—â–µ–Ω–∏—è

    Returns:
        Coroutine: –Ω–∞ –≤—ã—Ö–æ–¥–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ—Ä—É—Ç–∏–Ω
    """
    markup_inline = standard.get()
    photo = FSInputFile('src/standard.jpg')
    days = database_utils.Get.get_subscribtion_days_by_title(title='STANDARD')
    await callback.message.delete()
    await callback.message.answer_photo(photo=photo, 
                                        caption=f'–≠—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ üìïSTANDARD, –ø–µ—Ä–∏–æ–¥ –µ–µ –¥–µ–π—Å—Ç–≤–∏—è {days} –¥–Ω–µ–π ', 
                                        reply_markup=markup_inline)
    

@router.callback_query(F.data == 'subscribtion_premium')
async def subscribtion_premium(callback: CallbackQuery) -> Coroutine:
    """–æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–∞ –ø–æ–¥ —Ä–∞–∑–¥–µ–ª –ø–æ–¥–ø–∏—Å–∫–∏ premium

    Args:
        callback (CallbackQuery): –∫–æ–ª–±—ç–∫ —Å —Å–æ–æ–±—â–µ–Ω–∏—è

    Returns:
        Coroutine: –Ω–∞ –≤—ã—Ö–æ–¥–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ—Ä—É—Ç–∏–Ω
    """
    markup_inline = premium.get()
    photo = FSInputFile('src/premium.jpg')
    days = database_utils.Get.get_subscribtion_days_by_title(title='PREMIUM')
    await callback.message.delete()
    await callback.message.answer_photo(photo=photo, 
                                        caption=f'–≠—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ üìòPREMIUM, –ø–µ—Ä–∏–æ–¥ –µ–µ –¥–µ–π—Å—Ç–≤–∏—è {days} –¥–Ω–µ–π ', 
                                        reply_markup=markup_inline)
from aiogram import Router, F
from aiogram.types import CallbackQuery, FSInputFile
from typing import Coroutine
import datetime

# * –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ç–∫—É
from keyboards.admin import admin
from keyboards.faq import faq
from keyboards.my_subscribtion import my_subscribtion
from keyboards.subscribtions import subscribtions
from keyboards.wallet import my_wallet
from keyboards.main import start
# * –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä—É—á–∫–∏ –¥–ª—è –±–¥
from utils import database_utils

# * –æ–±—ä—è–≤–ª—è–µ–º —Ä–æ—É—Ç–µ—Ä
router = Router()


@router.callback_query(F.data == "main_menu")
async def main_menu(callback: CallbackQuery) -> Coroutine:
    """–æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª—é—ç–∫–∞ –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞

    Args:
        callback (CallbackQuery): –∫–æ–ª–±—ç–∫ —Å —Å–æ–æ–±—â–µ–Ω–∏—è

    Returns:
        Coroutine: –Ω–∞ –≤—ã—Ö–æ–¥–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ—Ä—É—Ç–∏–Ω
    """
    photo = FSInputFile("src/start.jpg")
    markup_inline = start.get(callback.message.chat.id)
    await callback.message.delete()
    await callback.message.answer_photo(photo=photo, 
                                        caption='üêç –ü—Ä–∏–≤–µ—Ç, —è BitSnake –±–æ—Ç, —è –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ ' \
                                        '—Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª BitSnake, –∞ —Ç–∞–∫–∂–µ ' \
                                        '—É –º–µ–Ω—è –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–¥–∞—Ç—å ' \
                                        '–∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º',
                                        reply_markup=markup_inline)


@router.callback_query(F.data == "my_wallet")
async def my_wallet_callback(callback: CallbackQuery) -> Coroutine:
    """–æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–∞ –Ω–∞ —Ä–∞–∑–¥–µ–ª –º–æ–π –∫–æ—à–µ–ª–µ–∫

    Args:
        callback (CallbackQuery): –∫–æ–ª—é—ç–∫ —Å —Å–æ–æ–±—â–µ–Ω–∏—è

    Returns:
        Coroutine: –Ω–∞ –≤—ã—Ö–æ–¥–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ—Ä—É—Ç–∏–Ω
    """
    markup_inline = my_wallet.get()
    balance = database_utils.Get.get_balance_by_telegram_id(telegram_id=callback.message.chat.id)
    username = callback.message.chat.username
    await callback.message.delete()
    await callback.message.answer(f'ü™™ {username}\n\n' \
                                f'–ë–∞–ª–∞–Ω—Å: {balance}$', 
                                reply_markup=markup_inline)
    
     
@router.callback_query(F.data == "subscribtions")
async def subscriptions_callback(callback: CallbackQuery) -> Coroutine:
    """–æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–∞ –Ω–∞ —Ä–∞–∑–¥–µ–ª –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫

    Args:
        callback (CallbackQuery): –∫–æ–ª–±—ç–∫ —Å —Å–æ–æ–±—â–µ–Ω–∏—è

    Returns:
        Coroutine: –Ω–∞ –≤—ã—Ö–æ–¥–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ—Ä—É—Ç–∏–Ω
    """
    markup_inline = subscribtions.get()
    photo = FSInputFile("src/start.jpg")
    await callback.message.delete()
    await callback.message.answer_photo(photo=photo, 
                                        caption='üõí –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏, –ø–µ—Ä–∏–æ–¥ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–æ–∫ ' \
                                        '–Ω–µ —Å—É–º–º–∏—Ä—É–µ—Ç—Å—è, –ø—Ä–æ–±–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏–∏ —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑', 
                                        reply_markup=markup_inline)


@router.callback_query(F.data == "my_subscribtions")
async def my_subscription_callback(callback: CallbackQuery) -> Coroutine:
    """–æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–∞ –ø–æ–¥ —Ä–∞–∑–¥–µ–ª –º–æ—è –ø–æ–¥–ø–∏—Å–∫–∞

    Args:
        callback (CallbackQuery): –∫–æ–ª–±—ç–∫ —Å —Å–æ–æ–±—â–µ–Ω–∏—è

    Returns:
        Coroutine: –Ω–∞ –≤—ã—Ö–æ–¥–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ—Ä—É—Ç–∏–Ω
    """
    markup_inline = my_subscribtion.get()
    date_over = database_utils.Get.get_last_subscribtion_dateover_by_user_id(user_id=callback.message.chat.id)
    if date_over > datetime.datetime.now():
        status = '‚úÖ Active'
        timedifference = (date_over - datetime.datetime.now()).total_seconds()
    else:
        status = '‚ùå Inactive'
        timedifference = 0
    await callback.message.delete()
    await callback.message.answer('üìà –≠—Ç–æ —Ä–∞–∑–¥–µ–ª –º–æ—è –ø–æ–¥–ø–∏—Å–∫–∞, –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ ' \
                                    '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞–ª–∏—á–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –≤a—à–µ–º ' \
                                    '–∞–∫–∫–∞—É–Ω—Ç–µ –∏ –∫–æ–ª-–≤–æ –¥–Ω–µ–π –¥–æ –µ–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è\n\n' \
                                    f'–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: {status}\n\n' \
                                    f'‚è± –î–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {int(timedifference // 86400)}d ' \
                                    f'{int((timedifference % 86400) // 3600)}h', 
                                    reply_markup=markup_inline)
    
    
@router.callback_query(F.data == "faq")
async def faq_callback(callback: CallbackQuery) -> Coroutine:
    """–æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–∞ –ø–æ–¥ —Ä–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏

    Args:
        callback (CallbackQuery): –∫–æ–ª–±—ç–∫ —Å —Å–æ–æ–±—â–µ–Ω–∏—è

    Returns:
        Coroutine: –Ω–∞ –≤—ã—Ö–æ–¥–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ—Ä—É—Ç–∏–Ω
    """
    markup_inline = faq.get()
    photo = FSInputFile("src/faq.jpg")
    await callback.message.delete()
    await callback.message.answer_photo(photo=photo,
                                        reply_markup=markup_inline, 
                                        caption='üí≠ –≠—Ç–æ —Ä–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏, –∑–¥–µ—Å—å –≤—ã ' \
                                        '–º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç –∏ –∑–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, ' \
                                        '–º—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è')


@router.callback_query(F.data == "admin_panel")
async def admin_callback(callback: CallbackQuery) -> Coroutine:
    """–æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–∞ –ø–æ–¥ —Ä–∞–∑–¥–µ–ª –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏

    Args:
        callback (CallbackQuery): –∫–æ–ª—é—ç–∫ —Å —Å–æ–æ–±—â–µ–Ω–∏—è

    Returns:
        Coroutine: –Ω–∞ –≤—ã—Ö–æ–¥–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ—Ä—É—Ç–∏–Ω
    """
    markup_inline = admin.get()
    await callback.message.delete()
    await callback.message.answer(reply_markup=markup_inline, 
                                  text='üîê –≠—Ç–æ —Ä–∞–∑–¥–µ–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è, ' \
                                  '–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ç–∏–∫–µ—Ç, ' \
                                  '–Ω–∞—á–∏—Å–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–Ω–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ ' \
                                  '–≤—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ' \
                                  '–∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–µ—Ç–µ–ª–µ–π –±–æ—Ç–∞')
